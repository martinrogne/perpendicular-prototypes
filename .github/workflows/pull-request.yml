on: pull_request
name: Pull Request
jobs:
  commitlint:
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: wagoid/commitlint-github-action@v2
      with:
        firstParent: true
        failOnWarnings: true
        configFile: ./.github/tools/commitlint.config.js


  lint:
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Install
      run:
        npm install

    - name: Lint
      run:
        npm run ci:lint

  build:
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Install
      run:
        npm install

    - name: Build libraries
      run:
        npm run ci:build-libs

    - name: Translate
      run:
        npm run ci:translate

    - name: Sync translations
      run:
        npm run ci:sync-translations
      env:
        POEDITOR_API_KEY: ${{ secrets.POEDITOR_API_KEY }}

    - name: Build
      run:
        npm run ci:build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: dist

  test:
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: dist

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Install
      run:
        npm install

    - name: Test (perpendicular-analytics)
      run:
        npm run ci:test:perpendicular-analytics

    - name: Test (perpendicular-factories-wcs)
      run:
        npm run ci:test:perpendicular-factories-wcs

    - name: Test (perpendicular-providers-wcs)
      run:
        npm run ci:test:perpendicular-providers-wcs

    - name: Test (perpendicular-directives)
      run:
        npm run ci:test:perpendicular-directives

  preview:
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: dist

    - name: Publish
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=dist/demo
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
